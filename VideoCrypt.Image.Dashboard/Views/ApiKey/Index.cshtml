@model PaginatedList<ApiKey>

@{
    ViewData["Title"] = "API Keys";
}

<h2 class="col-6 tm-text-primary">
    <span class="text-muted fw-light">Api key /</span> Dashboard
</h2>

<div class="card">
    <div class="d-flex flex-row justify-content-between">
        <h5 class="card-header">Api keys</h5>
        <button style="height: 20%;margin: 5px;" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#basicModal">
            Add API Key
        </button>
    </div>

    <div class="table-responsive text-nowrap">
        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>Key</th>
                <th>Name</th>
                <th>Description</th>
                <th>Created At</th>
                <th>Action</th>
            </tr>
            </thead>
            <tbody class="table-border-bottom-0">
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Key</td>
                    <td>@item.Name</td>
                    <td>@item.Description</td>
                    <td>@item.CreatedAt</td>
                    <td>                     
                        <button type="button"
                                class="btn btn-danger" 
                                data-bs-toggle="modal" 
                                data-bs-target="#deleteModal"
                                data-url="@item.Id">Delete</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<div class="mt-3 d-flex flex-row-reverse">
    @if (Model.HasNextPage)
    {
        <a asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
    }
    
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
    }
    
    Page @Model.PageIndex of @Model.TotalPages




</div>
@Html.Partial("_deleteModal")
@Html.Partial("_AddApiKeyModal", new VideoCrypt.Image.Dashboard.Models.ApiKeyForCreation())
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var apiKeyId = button.getAttribute('data-url');
            var input = deleteModal.querySelector('#apiKeyId');
            input.value = apiKeyId;
        });
    });
</script>
