version: '3.8'

services:
  videocrypt-api:
    build:
      context: ..
      dockerfile: VideoCrypt.Image.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - access_key=Qqt3KMXNlK4iCKqPhgEd
      - secret_key=Kncx7QKlHyaN1rmbRRrAqDvDLGhGt8IAPdwhyjg6
      - service_url=http://10.13.111.3
      - api_secrete_key=GoCdqzvvbJWyy2F3J3mm/2cXIufm5+KEeeeGRLiHg8w=
    networks:
      - videocrypt-net

  videocrypt-caching-app:
    build:
      context: ..
      dockerfile: VideoCrypt.Image.CashingApp/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - access_key=Qqt3KMXNlK4iCKqPhgEd
      - secret_key=Kncx7QKlHyaN1rmbRRrAqDvDLGhGt8IAPdwhyjg6
      - service_url=http://10.13.111.3
    volumes:
      - videocryptimage_cache_volume:/cache
    deploy:
      replicas: 3
    networks:
      - videocrypt-net
    # Note: You might not need to specify a port here if NGINX will handle routing.

  videocrypt-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - videocrypt-net

  nginx:
    build:
      context: .
      dockerfile: NginxDockerfile
    ports:
      - "80:80"
    depends_on:
      - videocrypt-api
      - videocrypt-caching-app
      - videocrypt-dashboard
    networks:
      - videocrypt-net
    # No need to specify port here if internal communication is handled by Docker.

volumes:
  videocryptimage_cache_volume:
    driver: local

networks:
  videocrypt-net:
    driver: bridge