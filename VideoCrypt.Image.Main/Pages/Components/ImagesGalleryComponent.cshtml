@model ImagesGalleryComponent
<div>
<style>
    .img-container {
        position: relative;
        width: 100%;
        padding-bottom: 50%; /* Makes the container square */
        overflow: hidden;
    }
    .img-container img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover; /* Ensures the image covers the container while maintaining aspect ratio */
    }
    .tm-video-item {
        height: 100%; /* Ensures the figure takes the full height of its container */
    }
    .figcaption-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .btn-delete {
        margin-top: 10px;
        background-color: #dc3545; /* Bootstrap's danger color */
        border: none;
        color: white;
        padding: 5px 10px;
        cursor: pointer;
        font-size: 14px;
        border-radius: 5px;
        transition: background-color 0.3s;
    }
    .btn-delete:hover {
        background-color: #c82333; /* Darker shade for hover */
    }
</style>
    <div class="container-fluid tm-container-content tm-mt-60">
        <div class="row mb-4">
            <h2 class="col-6 tm-text-primary">Image Gallery</h2>
            <div class="col-6 d-flex justify-content-end align-items-center">
                <form action="" class="tm-text-primary">
                    Page <input type="text" value="@Model.CurrentPage" size="1" class="tm-input-paging tm-text-primary"> of @Model.TotalPages
                </form>
            </div>
        </div>
        <div class="row tm-mb-90 tm-gallery">
            @if (Model.Images.Value != null || Model.Images is not null)
            {
            var images = await Model.Images.Value;
            if (images?.Items != null && images.Items.Any())
            {
            foreach (var imageUrl in images.Items)
            {
            <div class="d-flex flex-column mt-1 col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 mb-5">
                <figure class="effect-ming tm-video-item img-container" data-bs-toggle="modal"
                        data-bs-target="#imageModal" data-bs-src="@imageUrl">
                    <img src="@imageUrl" alt="Image">
                    <figcaption class="d-flex align-items-center justify-content-center figcaption-container">
                        @{
                            var uri = new Uri(imageUrl);
                            var fileName = System.IO.Path.GetFileName(uri.LocalPath);
                            string fileNameWithoutExtension = System.IO.Path.GetFileNameWithoutExtension(fileName);
                        }
                        <h6>@fileNameWithoutExtension</h6>
                        <a>View more</a>
                    </figcaption>

                </figure>
                <button class="btn btn-delete" onclick="deleteImage('@imageUrl')">Delete</button>

            </div>
            }
            }
            else
            {
            <div class="col-12">
                <p class="text-center">No images found.</p>
            </div>
            }
            }
            else
            {
            <div class="col-12">
                <p class="text-center">No images found.</p>
            </div>
            }
        </div>
        <div class="row tm-mb-90">
            <div class="col-12 d-flex justify-content-between align-items-center tm-paging-col">
                @{
                    var previous = Model.CurrentPage - 1;
                }
                <button hydro-on:click="@(() => Model.PageChanged(previous))"
                        class="btn btn-primary tm-btn-next">
                    Previous Page
                </button>
                <div class="tm-paging d-flex">
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <button hydro-on:click="@(() => Model.PageChanged(i))"
                                class="@(Model.CurrentPage == i ? "active" : "") tm-paging-link">
                            @i
                        </button>
                    }
                </div>
                @{
                    var nextPage = Model.CurrentPage + 1;
                }
                <button hydro-on:click="@(() => Model.PageChanged(nextPage))"
                        class="btn btn-primary tm-btn-next">
                    Next Page
                </button>
            </div>
        </div>
        <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-body">
                        <img id="modalImage" src="" class="img-fluid">
                        <p id="imageResolution"></p>
                        <p id="imageExtension"></p>
                    </div>
                    <div class="modal-footer">
                        <a id="downloadLink" href="" class="btn btn-primary" download>Download</a>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="deleteSuccessModal" tabindex="-1" aria-labelledby="deleteSuccessModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteSuccessModalLabel">Image Deleted</h5>
                        <button type="button" class="btn btn-delete" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>The image has been successfully deleted.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script>
    function deleteImage(imageUrl) {
        $('#deleteSuccessModal').modal('show');
    }
</script>
</div>
